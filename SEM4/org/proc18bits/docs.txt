INSTRUÇÕES 
code    sintaxe                 semantica                           type
00-     add rd, rs1, rs2        rd <- rs1 + rs2                     1
01-     
02-     sub  rd, rs1, rs2       rd <- rs1 - rs2                     1
03-     mul  rd, rs1, rs2       rd <- rs1 * rs2                     1
04-     div rd, rs1, rs2        rd <- rs1 / rs2                     1
05-     lw rd, rs1              rd <- (rs1)                         1
06-     sw rd, rs1              rd -> (rs1)                        1
07-     beq imm8                se (r0 == r1) PC = PC + imm8        2
08-     bne imm8                se (r0 != r1) PC = PC + imm8        2
09-     bge imm8                se (r0 >= r1) PC = PC + imm8        2
10-     blt imm8                se (r0 < r1)  PC = PC + imm8        2
11-     jal rd, imm8            rd <- PC + 1 | PC <- PC + imm8      3
12-     
13-     li rd, imm8             rd <- imm8                          3
14-     
15-     end                     finaliza programa 

? jalr rd, imm4(rs1)      rd <- PC + 1 | PC <- PC + imm4      2
? mv rd, rs1              rd <- rs1                           1       add rd, rs1, 0000

codigo de instrução 
00-     add     0000 r      v
01-             0001        v
02-     sub     0010 r      v
03-     mul     0011 r      v
04-     div     0100 r      v
05-     lw      0101 r      v
06-     sw      0110 n      v
07-     beq     0111 n      
08-     bne     1000 n
09-     bge     1001 n
10-     blt     1010 n
11-     jal     1011 n      
12-        
13-     li      1101 r      v
14-             1110
15-     end     1111 n      v    1111000000000000




li r0, 16
0b1101-00010000-0000
0b1111111111111111


add r1, r0, r0
0b0000-0000-0000-0001
0b1111000000000000


sub r2, r1, r0
0b0010000100000010
0b1111000000000000

mul r3, r1, r1
0b0011000100010011

mul r1, r0, r0
0b0011000000000001

div r4, r1, r0
0b0011000100000100

li r0, 16
mul r1, r0, r0
0b1101000100000000
0b0011000000000001

li r0, 16
mul r1, r0, r0
div r2, r1, r0
0b1101000100000000
0b0011000000000001
0b0100000100000010
0b1111000000000000


lw r0, m0(campo rs1)
0b0101000000000000
0b1111000000000000


sw r0 (reg c/ dado de entrada), m2(campo rs2 - reg com endereço de memória)
0b0110000000100001
0b1111000000000000


mv rd, rs1 => add rd, rs1, 0000
0b0000000000010000
0b1111000000000000

jal x15, 8
0b1011000001001111

pc entra em A 
imm8 entra em B

jal rd, imm4   rd <- PC + 1 | PC <- PC + imm4
0b1011

07-     beq     0111 n      
08-     bne     1000 n
09-     bge     1001 n
10-     blt     1010 n
11-     jal     1011 n    



li r2, 8
li r3, 4
beq 2
mul r4, r2, r3

0b0000000000000000
0b1101000010000010
0b1101000001000011

0b1000000000100000

0b0011001000110100

0b0000001000100101
0b0000001000100110
0b0000001000100111
0b1111000000000000




FORMATO INSTRUÇÃO 

TIPO 1
    aaaa-bbbb-cccc-dddd
    a - codigo da INSTRUÇÃO
    b - rs1
    c - rs2 
    d - rd

TIPO 2
    aaaa-bbbb-cccc-dddd 
    a - codigo da instrução
    b - rs1
    c - rs2
    d - imm4

TIPO 3
    aaaa-ffffffff-dddd 
    a - codigo da instrução
    f - imm8
    d - rd

lw/sw       
branch
li

EXEMPLO 
li r0, 16
li r1, 8
add r2, r0, r1
sub r3, r0, r1
sub r4, r1, r0
mul r5, r1, r0
div r6, r0, r1
li r10, 0
sw r2, r10
li r10, 1
sw r3, r10
li r10, 1
sw r4, r10

li r1, 1;
li r2, 2;
li r3, 3;
li r4, 4;
li r5, 5;
li r6, 6;
li r7, 7;
li r8, 8;
li r9, 9;
li r10, 10;
li r11, 11;
li r12, 12;
li r13, 13;
li r14, 14;
li r15, 15;